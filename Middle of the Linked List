# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        #Challenge is to navigate to the central (or second central if list is even) linked list node
        
        #While loop to find length of linked list
        temp = head
        counter = 1
        while temp.next != None:
            temp = temp.next
            counter += 1
            
        #For loop to recurse through linked list to central position.
        for i in range(int(counter/2)):
            head = head.next
        return(head)
